{"version":3,"sources":["utils/selectHelpers.ts","components/DateSelect.tsx","utils/apiReturnTypes.ts","utils/useFetch.hook.tsx","components/FilterSelect.tsx","components/FilterContainer.tsx","components/ResultGraph.tsx","components/GraphContainer.tsx","pages/Home.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","formControl","margin","spacing","minWidth","selectEmpty","marginTop","getDates","startDate","stopDate","dateArray","start","moment","stop","push","format","add","DateSelect","setDate","classes","useState","date","state","setState","FormControl","required","className","InputLabel","htmlFor","Select","native","value","onChange","event","name","target","String","inputProps","id","label","map","val","FormHelperText","endpoints","useFetch","url","setData","error","setError","loading","setLoading","useEffect","a","fetch","res","json","resJson","FilterSelect","type","title","list","setList","console","log","getURL","FilterContainer","inputs","setInputs","Button","variant","color","onClick","e","preventDefault","ResultGraphs","data","labels","datasets","fill","backgroundColor","borderColor","options","plugins","display","text","legend","position","responsive","scales","y","ticks","beginAtZero","maintainAspectRatio","elements","point","radius","GraphContainer","ResultGraph","Home","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.663f956c.chunk.js","sourcesContent":["import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport moment from 'moment';\n\n// Filter columns\nexport type Filters = 'Device_ID' | 'Serial_Number';\n\nexport interface CustomDateType {\n  date: string;\n}\n\n// Select style\nexport const useStyles = makeStyles((theme: Theme) => createStyles({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\n// Get list of valid dates\nexport const getDates = (startDate: string, stopDate: string): string[] => {\n  const dateArray: string[] = [];\n  let start = moment(startDate);\n  const stop = moment(stopDate);\n  while (start <= stop) {\n    dateArray.push(moment(start).format('YYYY-MM-DD'));\n    start = moment(start).add(1, 'days');\n  }\n  return dateArray;\n};\n","import React, { ReactElement, useState } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport moment from 'moment';\nimport { getDates, useStyles, CustomDateType } from '../utils/selectHelpers';\n\ninterface Props {\n  setDate: React.Dispatch<React.SetStateAction<CustomDateType>>;\n}\n\nconst DateSelect: React.FC<Props> = ({ setDate }): ReactElement => {\n  const classes = useStyles();\n  const [state, setState] = useState<CustomDateType>({\n    date: '2019-04-29',\n  });\n\n  const handleChange = (\n    event: React.ChangeEvent<{\n      name?: string;\n      value: unknown;\n    }>,\n  ): void => {\n    const name = event.target.name as keyof typeof state;\n    setState({\n      ...state,\n      [name]: String(event.target.value),\n    });\n    setDate({\n      ...state,\n      [name]: String(event.target.value),\n    });\n  };\n\n  return (\n    <div>\n      <FormControl required className={classes.formControl}>\n        <InputLabel htmlFor=\"date-native-required\">Date</InputLabel>\n        <Select\n          native\n          value={state.date}\n          onChange={handleChange}\n          name=\"date\"\n          inputProps={{\n            id: 'date-native-required',\n          }}\n        >\n          <option value={state.date}>{moment(state.date).format('LL')}</option>\n          <optgroup label=\"Available Dates\">\n            {getDates('2019-04-29', '2019-05-06').map((val) => (\n              <option value={val} key={val}>\n                {moment(val).format('LL')}\n              </option>\n            ))}\n          </optgroup>\n        </Select>\n        <FormHelperText>Required</FormHelperText>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default DateSelect;\n","/* eslint-disable camelcase */\nimport { Filters } from './selectHelpers';\n\nexport const endpoints = {\n  reading: '/api/reading',\n  id: '/api/id',\n  serial: '/api/serial',\n};\n// export const baseURL = 'http://localhost:5000';\nexport const baseURL = '';\n\ninterface devType {\n    Device_ID: string;\n}\n\ninterface serialType {\n    Serial_Number: string;\n}\n\ninterface dataType {\n  Serial_Number: string;\n  DateTime: Date;\n  Device_ID: string;\n  Wattage: number;\n}\n\nexport interface devIdReturn {\n    type: string;\n    results: devType[]\n}\n\nexport interface serialNumReturn {\n  type: string;\n  results: serialType[];\n}\n\nexport interface dataReturn {\n  type: string;\n  results: dataType[];\n}\n\nexport const getURL = (\n  type: Filters,\n): string => baseURL + (type === 'Device_ID' ? endpoints.id : endpoints.serial);\n","import React, { useState, useEffect } from 'react';\nimport { dataReturn, devIdReturn, serialNumReturn } from './apiReturnTypes';\n\ninterface ReturnType {\n    loading: boolean;\n    error: unknown | null;\n}\n\nconst useFetch = (\n  url: string,\n  setData: React.Dispatch<\n    React.SetStateAction<dataReturn | devIdReturn | serialNumReturn | null>\n  >,\n): ReturnType => {\n  const [error, setError] = useState<unknown | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await fetch(url);\n        const resJson = await res.json();\n        setData(resJson);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [url, setData]);\n  return { loading, error };\n};\nexport default useFetch;\n","import React, { ReactElement, useState, useEffect } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { Filters, useStyles } from '../utils/selectHelpers';\nimport {\n  dataReturn, devIdReturn, serialNumReturn, getURL,\n} from '../utils/apiReturnTypes';\nimport useFetch from '../utils/useFetch.hook';\n\ninterface Props{\n  type: Filters;\n}\n\ninterface SelectDetails {\n  label: string;\n  value: string;\n  title: string;\n}\n\nconst FilterSelect: React.FC<Props> = ({ type }): ReactElement => {\n  const classes = useStyles();\n  const [state, setState] = useState<SelectDetails>({\n    label: type === 'Device_ID' ? 'ID' : 'SN',\n    value: '',\n    title: type === 'Device_ID' ? 'Device ID' : 'Serial Number',\n  });\n  const [\n    list,\n    setList,\n  ] = useState<dataReturn | devIdReturn | serialNumReturn | null>(null);\n\n  useEffect(() => {\n    console.log(list);\n  }, [list]);\n\n  const { loading, error } = useFetch(getURL(type), setList);\n\n  const handleChange = (\n    event: React.ChangeEvent<{\n      name?: string;\n      value: unknown;\n    }>,\n  ): void => {\n    const name = event.target.name as keyof typeof state;\n\n    setState({\n      ...state,\n      [name]: String(event.target.value),\n    });\n  };\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor={`${type}-native-required`}>\n          {state.label}\n        </InputLabel>\n        <Select\n          native\n          value={state.value}\n          onChange={handleChange}\n          name=\"label\"\n          inputProps={{\n            id: `${type}-native-required`,\n          }}\n        >\n          <option value={state.value}>{state.value}</option>\n          <optgroup label={`${state.title}s`}>\n            {/* {getDates('2019-04-29', '2019-05-06').map((val) => (\n              <option value={val} key={val}>\n                {moment(val).format('LL')}\n              </option>\n            ))} */}\n          </optgroup>\n        </Select>\n        <FormHelperText>{type}</FormHelperText>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default FilterSelect;\n","import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport DateSelect from './DateSelect';\nimport FilterSelects from './FilterSelect';\n\ninterface Props {\n  setData: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst FilterContainer: React.FC<Props> = ({ setData }) => {\n  const [inputs, setInputs] = useState({\n    date: '2019-04-29',\n  });\n\n  const handleClick = (e: React.MouseEvent<HTMLElement>): void => {\n    e.preventDefault();\n    console.log('clicked');\n    setData(inputs.date);\n  };\n  return (\n    <div className=\"filtercontainer\">\n      <div className=\"filterselects\">\n        <div className=\"filterinner\">\n          <DateSelect setDate={setInputs} />\n        </div>\n        <div className=\"filterinner\">\n          <FilterSelects type=\"Serial_Number\" />\n          <FilterSelects type=\"Device_ID\" />\n        </div>\n      </div>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>\n        Go\n      </Button>\n    </div>\n  );\n};\n\nexport default FilterContainer;\n","import React, { ReactElement } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { ChartOptions, ChartData } from 'chart.js';\n\nconst ResultGraphs: React.FC = (): ReactElement => {\n  const data: ChartData = {\n    labels: ['1', '2', '3', '4', '5', '6'],\n    datasets: [\n      {\n        label: '# of Votes',\n        data: [12, 19, 3, 5, 2, 3],\n        fill: false,\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgba(255, 99, 132, 0.2)',\n      },\n    ],\n  };\n\n  const options: ChartOptions = {\n    plugins: {\n      title: {\n        display: true,\n        text: 'Title',\n      },\n      legend: {\n        display: true,\n        position: 'bottom',\n      },\n    },\n    responsive: true,\n    scales: {\n      y: {\n        ticks: {\n          display: true,\n        },\n        beginAtZero: true,\n        title: {\n          text: 'Y Axis',\n          display: true,\n        },\n      },\n    },\n    maintainAspectRatio: false,\n    elements: {\n      point: {\n        radius: 10,\n      },\n    },\n  };\n\n  return <Line type=\"line\" data={data} options={options} />;\n};\n\nexport default ResultGraphs;\n","import React from 'react';\nimport moment from 'moment';\nimport ResultGraph from './ResultGraph';\n\ninterface Props {\n    title: string;\n}\n\nconst GraphContainer: React.FC<Props> = ({ title }) => (\n  <div>\n    <h3 className=\"centerhead\">{moment(title).format('LL')}</h3>\n    <div className=\"graphcontainer\">\n      <ResultGraph />\n    </div>\n  </div>\n);\n\nexport default GraphContainer;\n","import React, { useState } from 'react';\nimport './Home.css';\nimport FilterContainer from '../components/FilterContainer';\nimport GraphContainer from '../components/GraphContainer';\n\nconst Home: React.FC = () => {\n  const [data, setData] = useState('2019-04-29');\n  return (\n    <div className=\"appcontainer\">\n      <h1 className=\"centerhead\">Smart Homes Data Visualization</h1>\n      <h4 className=\"centerhead\">Filter</h4>\n      <FilterContainer setData={setData} />\n      <GraphContainer title={data} />\n    </div>\n  );\n};\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\n\nconst App: React.FC = (): React.ReactElement => (\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n  </Switch>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './normalize.css';\n// import './webflow.css';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}